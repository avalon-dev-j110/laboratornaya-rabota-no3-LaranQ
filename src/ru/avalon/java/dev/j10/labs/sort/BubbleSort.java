package ru.avalon.java.dev.j10.labs.sort;

import ru.avalon.java.dev.j10.labs.Sort;

/**
 * Пузырьковая сортировка (англ. bubble sort).
 *
 * <p>Простой алгоритм сортировки. Для понимания и
 * реализации этот алгоритм — простейший, но эффективен он
 * лишь для небольших массивов. Сложность алгоритма: O(n^2).
 *
 * @see <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0_%D0%BF%D1%83%D0%B7%D1%8B%D1%80%D1%8C%D0%BA%D0%BE%D0%BC">Пузырьковая сортировка</a>
 */
public class BubbleSort implements Sort {

    /**
     * {@inheritDoc}
     */
    public void sort(int[] array) {
        /*
         * TODO(Студент): Реализовать метод sort класса BubbleSort
         */
        int i = 0; // индекс внешнего массива. Определяет то, какие числа в массиве будут проверяться, чтобы на их место установить новое наименьшее из оставшихся чисел.
        //int j - индекс внутрененнего массива. Приравнивается i, чтобы начинать проверку после того, числа которое было уже определено как наименьшее.
        int min = 0; // переходная переменная. На нее устанавливается во внутреннем массиве значение переменной, которую будут переставлять на место новой переменной.
        
        for(i=0; i<array.length; i++){
            for (int j=i+1; j<array.length; j++){ // происходит проверка элемента массива с другими значениями массива большего индекса (т.е. следующего), чтобы на это место найти минимальное значения.
                if(array[j]<array[i]){
                    min = array[j]; // сохраняем в отдельную переменную, проверяемое значение.
                    array[j]=array[i];
                    array[i]=min; // на место проверяемого элемента массива ставим текущее известное на данный момент минимальное значение.
                }
            }
        }
    }
}
